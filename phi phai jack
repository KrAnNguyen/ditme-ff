    local GetKey = "https://t.me/lsModgaming"
    local API = "https://anotepad.com/notes/apc83qda"
    local savedKeyFile = "saved_key.txt"
 
 
    function ReadSavedKey()
        local file = io.open(savedKeyFile, "r")
        if file then
            local savedKey = file:read("*a")
            file:close()
            return savedKey
        end
        return nil
    end
    
    
    function SaveKey(key)
        local file = io.open(savedKeyFile, "w")
        if file then
            file:write(key)
            file:close()
            gg.toast("L∆∞u Key Th√†nh C√¥ng!")
        end
    end


    function DeleteKey()
        os.remove(savedKeyFile)
        gg.toast("ƒê√£ xo√° key!")
    end
    
    
    local GetData = (gg.makeRequest(API).content)
    if not GetData then
        gg.alert("L·ªói khi l·∫•y d·ªØ li·ªáu!")
        return
    end
    
   

    KeyOnline = string.match(GetData, "Key:%s*([%w%d]+)")
    ExpireDate = string.match(GetData, "ExpireDate:%s*(%d%d%d%d%-%d%d%-%d%d)")
    
    

    if KeyOnline == nil then
        gg.alert("Error fetching key! Ki·ªÉm tra l·∫°i format trong page note.")
        return
    end
    if ExpireDate == nil then
        gg.alert("Error fetching expire date! Ki·ªÉm tra l·∫°i format trong page note.")
        return
    end
    
    
    local CurrentDate = os.date("%Y-%m-%d")
    if CurrentDate > ExpireDate then
        gg.alert("Script ƒë√£ h·∫øt h·∫°n!\nExpire Date: " .. ExpireDate)
        os.exit()
    end
    
    
    local savedKey = ReadSavedKey()
    if savedKey and savedKey == KeyOnline then
        gg.toast("T·ª± ƒë·ªông ƒëƒÉng nh·∫≠p th√†nh c√¥ng!\nExpire Date: " .. ExpireDate)
    else
       
        local Pastek = gg.prompt({"Vui l√≤ng nh·∫≠p key ƒë·ªÉ v√†o script"}, nil, {"text"})
        if Pastek == nil or Pastek[1] == "" then
            gg.alert("Key sai ho·∫∑c h·∫øt h·∫°n!")
            return
        end
    
        if Pastek[1] ~= KeyOnline then
            local choice = gg.choice({"Copy Link", "OK"}, nil, "Sai m·∫≠t kh·∫©u!\nVui l√≤ng v√¥ nh√≥m ƒë·ªÉ l·∫•y key:\n"..GetKey)
            if choice == 1 then
                gg.copyText(GetKey)
                gg.alert("Link ƒë√£ ƒë∆∞·ª£c sao ch√©p v√†o clipboard!")
            end
            return
        else
            
            local saveChoice = gg.choice({"L∆∞u key", "Kh√¥ng L∆∞u"}, nil, "ƒêƒÉng nh·∫≠p th√†nh c√¥ng!\nB·∫°n c√≥ mu·ªën l∆∞u key cho l·∫ßn sau d√πng kh√¥ng?")
            if saveChoice == 1 then
                SaveKey(Pastek[1])
            end
        end
    end
    

    if gg.choice({"Xo√° key ƒë√£ l∆∞u", "Ti·∫øp t·ª•c ƒëƒÉng nh·∫≠p"}, nil, "Qu·∫£n l√Ω key ƒë√£ l∆∞u") == 1 then
        DeleteKey()
    end

function setvalue(address,flags,value) 
local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value 
gg.setValues(tt) end local n, startAddress, endAddress = nil, 0, 0 local function name(lib) if n == lib then return startAddress, endAddress end local ranges = gg.getRangesList(lib or 'libil2cpp.so') for i, v in ipairs(ranges) do if v.state == "Xa" then startAddress = v.start endAddress = ranges[#ranges]['end'] break end end return startAddress, endAddress end local function SetValue(libname, offset, hex) name(libname) local t, total = {}, 0 for h in string.gmatch(hex, "%S%S") do  table.insert(t, { address = startAddress + offset + total,flags = gg.TYPE_BYTE,value = h .. "r"    }) total = total + 1 end local res = gg.setValues(t) if type(res) ~= 'string' then return true else gg.alert(res) return false end end

function script()
main = gg.choice({
"Bypass Free Fire Maxüî∞",
"Menu hacküéØ",
G.."Speed hack‚è≥",
"Tho√°t scriptüö™",
},nil,"Ph√°t tri·ªÉn b·ªüi @hnlsm [Telegram] \n\n Khuy·∫øn kh√≠ch d√πng bypass ƒë·ªÉ k·∫πp Menu Safe ƒë·ªÉ cho ·ªïnüö®")
if main == nil then gg.toast('HNhat') else
if main == 1 then bypass() end
if main == 2 then menu() end
if main == 3 then speed() end
if main == 4 then exit() end
if main == 5 then gg.setVisible(true) os.exit(print('HNhat')) end
end end
function bypass()
SetValue("libanogs.so", 0x2D9170, "00 00 00 00")
SetValue("libanogs.so", 0x2DB900, "00 00 00 00")
SetValue("libanogs.so", 0x31B790, "00 00 00 00")
SetValue("libanogs.so", 0x321160, "00 00 00 00")
SetValue("libanogs.so", 0x34EAB0, "00 00 00 00")
SetValue("libanogs.so", 0x34EAF0, "00 00 00 00")
SetValue("libanogs.so", 0x368EC0, "00 00 00 00")
SetValue("libanogs.so", 0x369C40, "00 00 00 00")
SetValue("libanogs.so", 0x369D40, "00 00 00 00")
SetValue("libanogs.so", 0x369DA0, "00 00 00 00")
admin
SetValue("libanogs.so",0x118c4c,"00 00 00 00")
SetValue("libanogs.so",0x118c50,"00 00 00 00")
SetValue("libanogs.so",0x1355ec,"00 00 00 00")
SetValue("libanogs.so",0x1355f0,"00 00 00 00")
SetValue("libanogs.so",0x145154,"00 00 00 00")
SetValue("libanogs.so",0x145158,"00 00 00 00")
SetValue("libanogs.so",0x22a74c,"00 00 00 00")
SetValue("libanogs.so",0x22a750,"00 00 00 00")
SetValue("libanogs.so",0x2b0d98,"00 00 00 00")
SetValue("libanogs.so",0x2b0d9c,"00 00 00 00")
SetValue("libanogs.so",0x2f6680,"00 00 00 00")
SetValue("libanogs.so",0x2f6684,"00 00 00 00")
gg.toast("Bypass loaded!")
end
function menu()
m = gg.multiChoice({
'Aim awm (S·∫£nh/ƒêƒÉng nh·∫≠p)',
'Headshot m·ªói ng·ª±c (Trong tr·∫≠n)',
'Antenna tay (ƒêƒÉng nh·∫≠p)',
'Quay v·ªÅ',
},nil,'L∆∞u √ù: S·ª≠ d·ª•ng hack c·ªßa Script c√≥ kh·∫£ nƒÉng BAN OFF, kh√¥ng khuy·∫øn kh√≠ch d√πngüö®')
if m == nil then gg.toast('HNhat') else
if m [1] then awm() end
if m [2] then chead() end
if m [3] then antena() end
if m [4] then gg.setVisible(true) end
end end
function awm()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("h 08 00 00 00 00 00 60 40 CD CC 8C 3F 8F C2 F5 3C CD CC CC 3D 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 3F 33 33 13 40 00 00 B0 3F 00 00 80 3F 01", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("h 08 00 00 00 00 00 60 40 CD CC 8C 3F 8F C2 F5 3C CD CC CC 3D 06 00 00 00 00 00 80 3f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 33 33 13 40 00 00 B0 3F 00 00 80 4F 01", gg.TYPE_BYTE)
gg.clearResults()
gg.toast("Xong ‚úÖ")
end
function chead()
gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER)
gg.searchNumber("hdc5239bd27c18b3cc0d0f8b9", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hdc52393e27c18b3cc0d0f8bc", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h6371b0bd909874bb", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hcddc7944909874b9", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h7bf96cbd583409bbb060beba", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hcddc7944583409bbb060beba", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h541b87bd90c6d7ba805499b9", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hcddc794490c6d7ba805499b9", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h710287bd90fdd7ba40189839", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hcddc794490fdd7ba40189839", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("hccf86cbd40d2ceb95864be3a", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hcddc794440d2ceb95864be3a", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h76FCDBBC7C5E8B3A508BBB3A", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hCDDC79447C5E8B3A508BBB3A", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h801395BC30FF37BB00FD783B", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hCDDC794430FF37BB00FD783B", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h1F93DBBC90BF843A20A6BBBA", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hCDDC794490BF843A20A6BBBA", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("hEFA300BE40B99239204E07BA", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("hCDDC794440B99239204E07BA", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("hBC19FDBDB0E3A93A804223B9", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("h42E05643B0E3A93A804223B9", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h724B723D7283053E00000000180427BD0084A737000080B1", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("h724B723D7283053E000000002300003D0000003D0AD73EBC", gg.TYPE_BYTE)
gg.clearResults()
gg.searchNumber("h7D1A89BD50269F3B", gg.TYPE_BYTE)
gg.getResults(gg.getResultsCount())
gg.editAll("h0000704100007041", gg.TYPE_BYTE)
gg.clearResults()
gg.toast("Xong ‚úÖ")
end
function antena()
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber('-0.02980032004;1;0.48141112924::9', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.searchNumber('0.09043131769;1;0.14753369987::9', gg.TYPE_FLOAT)
gg.refineNumber('1', gg.TYPE_FLOAT)
gg.getResults(gg.getResultsCount())
gg.editAll('3000', gg.TYPE_FLOAT)
gg.clearResults()
gg.toast('Xong ‚úÖ')
end
G = " OFF "
function speed()
    if G == " OFF " then
        gg.setRanges(gg.REGION_ANONYMOUS)
        gg.searchNumber("h 01 00 00 00 02 2B 07 3D", gg.TYPE_BYTE)
        gg.getResults(gg.getResultsCount())
        gg.editAll("h 01 00 00 00 FC A9 71 3D", gg.TYPE_BYTE)
        gg.toast("Speed hack ON‚úÖ")
        gg.clearResults()
        G = " ON "
    elseif G == " ON " then
        gg.setRanges(gg.REGION_ANONYMOUS)
        gg.searchNumber("h 01 00 00 00 FC A9 71 3D", gg.TYPE_BYTE)
        gg.getResults(gg.getResultsCount())
        gg.editAll("h 01 00 00 00 02 2B 07 3D", gg.TYPE_BYTE)
        gg.toast("Speed hack OFF‚ùå")
        gg.clearResults()
        G = " OFF "
    end
end
function thoat()
  print("Goodbye see you later")
  print("                            ")
  print("                           ")
  print("Thank You For Using My Script ")
  print("Credit: HNhat")
  print("Telegram: t.me/lsModgaming (Loadstring Mod)                     ")
  os.exit()
end
while true do if gg.isVisible() then gg.setVisible(false) script() end end
